apply plugin: 'com.android.model.native'

model {
    repositories {
        libs(PrebuiltLibraries) { libs ->
            LIBS_DEF.each { entry ->
                libs.create(entry[0]) {
                    if (entry[2] != "") {
                        headers.srcDir entry[2]
                    }
                    entry[1].each { binEntry ->
                        binaries.withType(SharedLibraryBinary) {
                            sharedLibraryFile = file("${PROJECT_PATH_BASE}/ext-output/${targetPlatform.getName()}/${binEntry}")
                        }
                    }
                }
            }
        }
    }

    android {
        compileSdkVersion VCMI_COMPILE_SDK
        buildToolsVersion "25.0.0"

        defaultConfig {
            minSdkVersion.apiLevel 16
            targetSdkVersion.apiLevel 24
        }
    }

    android.ndk {
        moduleName "boost-locale"
        platformVersion VCMI_PLATFORM
        toolchain "clang"
        stl VCMI_STL_VERSION
        cppFlags.addAll("-std=c++11",
                "-fcxx-exceptions",
                "-frtti",
                "-DBOOST_LOCALE_NO_WINAPI_BACKEND",
                "-DBOOST_LOCALE_NO_POSIX_BACKEND",
                "-DBOOST_LOCALE_WITH_ICONV",
                "-DTHOUSEP=44",
                "-DRADIXCHAR=46",
                "-I" + file("${VCMI_INCL_ICONV}").absolutePath,
                "-I" + file("${VCMI_INCL_BOOST}").absolutePath)
        ldLibs.addAll("z", "log", "atomic")
        abiFilters.addAll(VCMI_ABIS)
    }

    android.sources {
        main {
            jni {
                source {
                    srcDir "${VCMI_PATH_BOOST}/libs/locale/src"
                    exclude "**/win32/*"
                    exclude "**/icu/*"
                    exclude "**/posix/*"
                }
                dependencies {
                    project ":boost-system"
                    library "prebuiltIconv" linkage "shared"
                }
            }
        }
    }
}