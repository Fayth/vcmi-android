apply plugin: 'com.android.model.native'

model {
    repositories {

        libs(PrebuiltLibraries) { libs ->
            LIBS_DEF.each { entry ->
                libs.create(entry[0]) {
                    if (entry[2] != "") {
                        headers.srcDir entry[2]
                    }
                    entry[1].each { binEntry ->
                        binaries.withType(SharedLibraryBinary) {
                            sharedLibraryFile = file("${PROJECT_PATH_BASE}/obj/local/${targetPlatform.getName()}/${binEntry}")
                        }
                    }
                }
            }
        }
    }

    android {
        compileSdkVersion 24
        buildToolsVersion "25.0.0"

        defaultConfig {
            minSdkVersion.apiLevel 16
            targetSdkVersion.apiLevel 24
        }
    }

    android.ndk {
        moduleName "vcmi-lib"
        debuggable true
        platformVersion 16
        toolchain "clang"
        stl VCMI_STL_VERSION
        cppFlags.addAll("-std=c++11",
                "-fcxx-exceptions",
                "-frtti",
                "-g",
                "-DM_DATA_DIR=\"\\\"none\\\"\"",
                "-DM_BIN_DIR=\"\\\"none\\\"\"",
                "-DM_LIB_DIR=\"\\\"none\\\"\"",
                "-I" + file("${VCMI_PATH_VCMI}/include").absolutePath,
                "-I" + file("${VCMI_PATH_VCMI}/lib").absolutePath,
                "-I" + file("${VCMI_PATH_VCMI}").absolutePath,
                "-I" + file("${VCMI_INCL_BOOST}").absolutePath,
                "-I" + file("${VCMI_INCL_FUZZYLITE}").absolutePath,
                "-I" + file("src/main/jni").absolutePath,
                "-DFL_CPP11",
                "-DIOAPI_NO_64")
        ldLibs.addAll("z", "log", "atomic")
        abiFilters.addAll(VCMI_ABIS)
    }

    android.sources {
        main {
            jni {
                source {
                    srcDir "../jni/vcmi-app/generated-version-dir"
                    srcDir "../jni/vcmi-app/vcmi-app/lib"
                    excludes.add("**/minizip/*")

                    // currently all AI libraries are built together with lib, because using dlopen/dlsym from shared libraries breaks rtti in them
                    srcDir "../jni/vcmi-app/vcmi-app/AI/BattleAI"
                    srcDir "../jni/vcmi-app/vcmi-app/AI/VCAI"
                    excludes.add("**/main.cpp")
                }
                dependencies {
                    library "prebuiltSDL" linkage "shared"
                    project ":minizip"
                    project ":fuzzylite"
                    project ":boost-datetime"
                    project ":boost-locale"
                    project ":boost-system"
                    project ":boost-filesystem"
                    project ":boost-smartptr"
                    project ":boost-program-options"
                    project ":boost-thread"
                }
            }
        }
    }
}